echo：输入什么就会在屏幕上显示什么,一般跟重定向进行连用
	[root@server0 ~]# echo hello word
	hello word
	[root@server0 ~]# echo 123456 > /opt/1.txt
	[root@server0 ~]# cat /opt/1.txt 
	123456
	[root@server0 ~]# echo 789 >> /opt/1.txt 
	[root@server0 ~]# cat /opt/1.txt 
	123456
	789
	[root@server0 ~]# 
#############################################################################################
管理用户和组
	用户：1、可以登陆操作系统
		2、可以实现访问控制（不同的用户具备不同的权限）
	组：方便对用户的管理（将用户加入组）
	唯一标识：UID（用户）编号 GID（组）编号
	管理员用户root：UID 0
	普通用户UID：从UID 1000开始
	组：基本组（私有组） 附加组（从属组  公共组）
	一个用户至少属于一个组

############################################################################################
添加用户useradd：
添加组groupadd
	用户基本信息存放在/etc/passwd
		[root@server0 ~]# head -1 /etc/passwd
		root:x:0:0:root:/root:/bin/bash
		解释：用户名：密码占位符：UID：基本GID：用户描述信息：家目录：解释器程序（shell)
	创建用户格式：useradd  选项  用户名
		常用选项： -u:指定UID创建用户
				-d：指定家目录创建用户、
				-s:指定登陆的shell解释器
				-G：附加组
				-g:基本组
	[root@server0 ~]# useradd nsdo2
	[root@server0 ~]# useradd -u 1100 nsd03	指定UID创建用户
	[root@server0 ~]# useradd -d /mnt/abc nsd04 	指定家目录创建用户
	[root@server0 ~]# grep 'nsd' /etc/passwd
	nsd01:x:1001:1001::/home/nsd01:/bin/bash
	nsdo2:x:1002:1002::/home/nsdo2:/bin/bash
	nsd03:x:1100:1100::/home/nsd03:/bin/bash
	nsd04:x:1101:1101::/mnt/abc:/bin/bash
	[root@server0 ~]# useradd -s /sbin/nologin nsdo7
	[root@server0 ~]# groupadd tarena   	  
	[root@server0 ~]# useradd -G tarena nsd08	

linux计算机：bc命令
	[root@server0 ~]# bc
	*乘法 /除法 %取余数运算，余数一定小于被除数

#################################################################################

管道操作:  |  竖线符号
	作用：将前面命令的输出结果，交给后面的命令处理，最后输出最后命令的输出结果
	注意：管道操作只有第一条命令有参数，
		显示/etc/passwd下的8-12行内容
			[root@server0 ~]# cat -n /etc/passwd | head -12 | tail -5
			 8	halt:x:7:0:halt:/sbin:/sbin/halt
    			 9	mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
    			 10	operator:x:11:0:operator:/root:/sbin/nologin
   			 11	games:x:12:100:games:/usr/games:/sbin/nologin
   			 12	ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin

########################################################################################

[root@server0 ~]# su - 切换用户

passwd：密码  （交互式设置密码）
	[root@server0 ~]# su - harry		切换用户
	[harry@server0 ~]$ passwd		交互式设置密码
	Changing password for user harry.	
	Changing password for harry.
	(current) UNIX password: 		请输入旧密码
	New password: 				请输入新密码
	Retype new password: 			请重新输入与上面一直的密码，新的密码
	passwd: all authentication tokens updated successfully.
	[harry@server0 ~]$ exit		退出
	logout
	[root@server0 ~]# 
echo '密码' | passwd --stdin harry （非交互式设置密码）
	
用户密码信息存放在/etc/shadow

使用usermod命令 ：修改用户信息
	常用命令选项：	 -u:指定UID创建用户
				-d：指定家目录创建用户、
				-s:指定登陆的shell解释器
				-G：附加组
		[root@server0 ~]# head -1 /etc/shadow
		root:$6$UiGI4Tc2$htsXYn5cJnOqv3P1VLcUSgfjDu2pL5yiJBuua6foZAHdwqeuLHfYUfS/	vBn27Wjvoel8EJgtdsMjyquqvKAmf1:16261:0:99999:7:::
		[root@server0 ~]# useradd natasha
		[root@server0 ~]# grep 'natasha' /etc/passwd
		natasha:x:1106:1107::/home/natasha:/bin/bash
		[root@server0 ~]# usermod -u 1300 -d /opt/abc -s /sbin/nologin  -G root natasha
		[root@server0 ~]# grep 'natasha' /etc/passwdnatasha:x:1300:1107::/opt/abc:/sbin/nologin

补充：vim可以修改/etc/shadow

删除用户：userdel
	选项-r：表示连家目录一起删除

#######################$$$$$$$$$$$$$$$$$$$$$$$$$$$##################$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

管理组帐号：
组的基本信息存放在/etc/group
	groupadd：添加组 
		[root@server0 ~]# groupadd stugrp   创建组
		[root@server0 ~]# tail -1 /etc/group
		stugrp:x:1108:
	解释：组名：组的密码占位符：本组的GID编号：组的成员列表

使用gpasswd命令
	gpasswd -a 用户名 组名   用户加入组
	gpasswd -d 用户名 组名	从组中删除用户	

[root@server0 ~]# gpasswd -a kenji stugrp
正在将用户“kenji”加入到“stugrp”组中
[root@server0 ~]# grep 'stugrp' /etc/group
stugrp:x:1108:kenji
[root@server0 ~]# gpasswd -a kaka stugrp
正在将用户“kaka”加入到“stugrp”组中
[root@server0 ~]# gpasswd -a tom stugrp
正在将用户“tom”加入到“stugrp”组中
[root@server0 ~]# gpasswd -a jack stugrp
正在将用户“jack”加入到“stugrp”组中
[root@server0 ~]# grep 'stugrp' /etc/group
stugrp:x:1108:kenji,kaka,tom,jack
[root@server0 ~]# gpasswd -d kaka stugrp
正在将用户“kaka”从“stugrp”组中删除
[root@server0 ~]# grep 'stugrp' /etc/group
stugrp:x:1108:kenji,tom,jack

############$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

tar备份与恢复
	归档：将许多零散的文件整理为一个文件，文件的总的大小基本不变
格式：tar	选项	tar包名字	被归档的文件
-c：创建归档
-x：释放归档
-f：指定归档文件的名称 （必须放到所有选项的最后）
-t：查看tar包内容
-p：保持路径不变进行归档
-C：指定释放位置
[root@server0 ~]# tar -cPf test01.tar /home/ /mnt/ 直接进行归档
[root@server0 ~]# ls
anaconda-ks.cfg  test01.tar
[root@server0 ~]# tar -cPf /opt/file01.tar  /home/ /mnt/  归档到/opt/下
[root@server0 ~]# ls /opt/
file01.tar          
[root@server0 ~]# mkdir /nsd
[root@server0 ~]# ls /opt/file01.tar 	
/opt/file01.tar
[root@server0 ~]# tar -xf /opt/file01.tar  -C /nsd/	释放归档file.tar到/nsd
tar: 从成员名中删除开头的“/”
[root@server0 ~]# ls /nsd

-c：创建归档	-x：释放归档	-f：指定归档文件的名称 （必须放到所有选项的最后）	-t：查看tar包内容
-p：保持路径不变进行归档	-C：指定释放位置

[root@server0 ~]#  rm -rf /opt/*
[root@server0 ~]# echo AAAA > /opt/1.txt
[root@server0 ~]# cat /opt/1.txt
AAAA
[root@server0 ~]# tar -cPf /root/test.tar /opt/1.txt 
[root@server0 ~]# tar -tf /root/test.tar 			查看tar包里边的内容
tar: 从成员名中删除开头的“/”
/opt/1.txt
[root@server0 ~]# echo BBBB > /opt/1.txt 
[root@server0 ~]# cat /opt/1.txt
BBBB
[root@server0 ~]# tar -xPf /root/test.tar 	绝对路径
[root@server0 ~]# cat /opt/1.txt 
AAAA
[root@server0 ~]# 

选项-z，-j，-J:调用.gz、.bz2、.xz格式的工具进行处理

[root@server0 ~]# rm -rf /opt/*
[root@server0 ~]# tar -zcPf /opt/nsd.tar.gz  /home/ 	将home 文件进行归档之后压缩成.gz格式
[root@server0 ~]# ls /opt/
nsd.tar.gz
[root@server0 ~]# rm -rf /mnt/*
[root@server0 ~]# tar -xf /opt/nsd.tar.gz  -C /mnt/   	释放压缩文件到mnt
tar: 从成员名中删除开头的“/”
[root@server0 ~]# ls /mnt/


压缩：按某种算法减小文件所占用空间的大小 恢复时按对应的逆向算法解压
linux独有的压缩工具 （只能压缩文件，不能压缩目录）
	gzip：把源文件直接压缩变成压缩包  扩展名.gz
		[root@server0 ~]# cp /etc/passwd /opt/
		[root@server0 ~]# cp /etc/shadow /opt/
		[root@server0 ~]# cp /etc/group /opt/
		[root@server0 opt]# gzip /opt/group 
		[root@server0 opt]# ls
		1.txt  group.gz  passwd  rh  shadow
	bzip2		扩展名.bz2
		[root@server0 opt]# bzip2 /opt/shadow 
		[root@server0 opt]# ls 
		1.txt  group.gz  passwd  rh  shadow.bz2
	xz		扩展名.xz
		[root@server0 opt]# xz /opt/passwd 
		[root@server0 opt]# ls
		1.txt  group.gz  passwd.xz  rh  shadow.bz2


####################################################%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
查看日期时间 date
	[root@server0 ~]# date +%F  显示年月日
	2018-03-14
	[root@server0 ~]# date +%Y	显示年
	2018
	[root@server0 ~]# date +%m	显示月
	03
	[root@server0 ~]# date +%d	显示天
	14
	[root@server0 ~]# date +%M	显示分
	22
	[root@server0 ~]# date +%H	显示时
	17

[root@server0 ~]# date -s '1996-10-18 08:30:17'   修改日期时间的格式

硬件时间：主板BIOS时间

######@@@！！！！！！￥￥￥￥￥￥￥￥%%%%%%%%%%%%%……&&&&&&&&&&&&&&&&……***************************

NTP时间同步
	NTP网络时间协议
		Network Time Protocol
	NTP服务器为客户机提供标准时间
	NTP客户机需要与NTP服务器保持沟通
服务端：服务端软件 ，classroom.example.com NTP服务器
	Apache稳定  Nginx并发量  tomcat兼容java的软件
客户端：客户端软件 
	1、安装客户端软件chrony

	2、修改配置文件指定服务端位置
		[root@server0 ~]# vim /etc/chrony.conf 
	以#开头的为注释文字
		#server 0.rhel.pool.ntp.org iburst
		#server 1.rhel.pool.ntp.org iburst
		#server 2.rhel.pool.ntp.org iburst
		server classroom.example.com iburst
	
	3、重启服务：
		[root@server0 ~]# systemctl restart  chronyd.service    重启服务。
		[root@server0 ~]# systemctl enable  chronyd.service	随即自启动

	4、验证：
	[root@server0 ~]# date  -s '2008-10-18 15:00:00'
2008年 10月 18日 星期六 15:00:00 CST
[root@server0 ~]# systemctl restart chronyd.service 
[root@server0 ~]# date
2008年 10月 18日 星期六 15:00:13 CST
[root@server0 ~]# date
2018年 03月 14日 星期三 18:05:33 CST
[root@server0 ~]# 










































